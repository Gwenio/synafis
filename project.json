{
	"$schema": "./templates/schemas/project.json",
	"variants":
	{
		"target":
		{
			"description": "The build target.",
			"options": [
				"synafis",
				"unit",
				"schemas"
			]
		},
		"platform":
		{
			"description": "The platform to build for.",
			"options": [
				"winapi"
			]
		}
	},
	"sources": [
	{
		"group": "src",
		"description": "Adds '.cpp' files used in all build variations to the 'src' group.",
		"prefix": "src/",
		"suffix": ".cpp",
		"files": [
			"gc",
			"gc/vmem",
			"gc/lock",
			"gc/pool",
			"gc/allocator",
			"gc/hard_ptr",
			"gc/soft_ptr",
			"gc/impl"
		],
		"filters": [
			{ "target": "synafis" },
			{ "target": "unit" }
		]
	},
	{
		"group": "src",
		"description": "Adds '.cpp' files used in all unit testing builds to the 'src' group.",
		"prefix": "test/",
		"suffix": ".cpp",
		"files": [
			"unit_runner",
			"gc/gc",
			"gc/vmem",
			"gc/pool",
			"gc/allocator",
			"gc/ptr_math",
			"gc/lock",
			"gc/collector"
		],
		"filters": [{ "target": "unit" }]
	},
	{
		"group": "json_schemas",
		"description": "The JSON Schema files for the project.",
		"prefix": "templates/schemas/",
		"suffix": ".json",
		"files": [
			"project"
		],
		"filters": [{ "target": "schemas" }]
	}],
	"steps":
	{
		"objects":
		{
			"action": "cxx",
			"description": "The step of compiling '.cpp' files to object files.",
			"filters": [
				{ "target": "synafis" },
				{ "target": "unit" }
			],
			"sources": [
			{
				"description": "Use the sources in 'src' as input for building the 'obj' output group.",
				"group": "src",
				"implicit": false,
				"produces": "obj"
			}],
			"outputs":
			{
				"obj":
				{
					"description": "Each input is used to make an object file with a name derived from the input as output.",
					"implicit": false,
					"extension": "obj",
					"location": "tmp",
					"single": true
				}
			}
		},
		"unit_exe":
		{
			"action": "link",
			"description": "The step for linking the object files for the unit test runner executable.",
			"filters": [
			{
				"target": "unit"
			}],
			"inputs": [
			{
				"description": "Use the outputs of 'objects.obj' as inputs.",
				"step": "objects",
				"group": "obj",
				"implicit": false
			}],
			"outputs":
			{
				"exe":
				{
					"description": "The test runner executable.",
					"implicit": false,
					"location": "tmp",
					"extension": "exe",
					"products": ["tester"]
				}
			}
		},
		"json_schemas":
		{
			"action": "compile_schema",
			"description": "Compiles JSON Schemas to JavaScript code.",
			"filters": [
				{ "target": "schemas" }
			],
			"sources": [
			{
				"group": "json_schemas",
				"description": "The source JSON Schema files.",
				"implicit": false,
				"produces": "js"
			}],
			"outputs":
			{
				"js":
				{
					"description": "The JavaScript files containing the compiled schemas.",
					"implicit": false,
					"extension": "js",
					"location": "schemas_js",
					"single": true
				}
			}
		},
		"bundle_schemas":
		{
			"action": "bundle_js",
			"description": "Combines the schema code into a single JavaScript file.",
			"filters": [
				{ "target": "schemas" }
			],
			"inputs": [
			{
				"description": "The compiled schemas.",
				"step": "json_schemas",
				"group": "js",
				"implicit": false,
				"produces": "bundle"
			}],
			"outputs":
			{
				"bundle":
				{
					"description": "The combined schema JavaScript file.",
					"extension": "js",
					"location": "schemas_js",
					"implicit": false,
					"products": ["json_schema_bundle"]
				}
			}
		},
		"minify_schemas":
		{
			"action": "minify_js",
			"description": "Minimizes the size of the combined schema code.",
			"filters": [
				{ "target": "schemas" }
			],
			"inputs": [
			{
				"description": "The combined schemas file.",
				"step": "bundle_schemas",
				"group": "bundle",
				"implicit": false,
				"produces": "mini"
			}],
			"outputs":
			{
				"mini":
				{
					"description": "The minified combined schema JavaScript file.",
					"extension": "min_js",
					"location": "js_dir",
					"implicit": false,
					"products": ["json_schema_bundle"]
				}
			}
		}
	}
}
